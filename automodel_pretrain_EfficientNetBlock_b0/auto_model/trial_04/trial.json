{"trial_id": "04", "hyperparameters": {"space": [{"class_name": "Boolean", "config": {"name": "efficient_net_block_2/pretrained", "default": false, "conditions": []}}, {"class_name": "Boolean", "config": {"name": "efficient_net_block_2/imagenet_size", "default": false, "conditions": []}}, {"class_name": "Boolean", "config": {"name": "conv_block_2/separable", "default": false, "conditions": []}}, {"class_name": "Choice", "config": {"name": "conv_block_2/num_blocks", "default": 2, "conditions": [], "values": [1, 2, 3], "ordered": true}}, {"class_name": "Choice", "config": {"name": "classification_head_2/spatial_reduction_1/reduction_type", "default": "flatten", "conditions": [], "values": ["flatten", "global_max", "global_avg"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "optimizer", "default": "adam", "conditions": [], "values": ["adam", "sgd", "adam_weight_decay"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.001, "conditions": [], "values": [0.1, 0.01, 0.001, 0.0001, 2e-05, 1e-05], "ordered": true}}, {"class_name": "Boolean", "config": {"name": "efficient_net_block_2/trainable", "default": false, "conditions": [{"class_name": "Parent", "config": {"name": "efficient_net_block_2/pretrained", "values": [true]}}]}}], "values": {"efficient_net_block_2/pretrained": true, "efficient_net_block_2/imagenet_size": true, "conv_block_2/separable": false, "conv_block_2/num_blocks": 3, "classification_head_2/spatial_reduction_1/reduction_type": "flatten", "optimizer": "adam_weight_decay", "learning_rate": 0.001, "efficient_net_block_2/trainable": true}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"/home/oleg/miniconda3/envs/TF/lib/python3.10/site-packages/keras_tuner/src/engine/base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/home/oleg/miniconda3/envs/TF/lib/python3.10/site-packages/keras_tuner/src/engine/base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"/home/oleg/miniconda3/envs/TF/lib/python3.10/site-packages/keras_tuner/src/engine/tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"/home/oleg/miniconda3/envs/TF/lib/python3.10/site-packages/autokeras/engine/tuner.py\", line 92, in _build_and_fit_model\n    model = self._try_build(trial.hyperparameters)\n  File \"/home/oleg/miniconda3/envs/TF/lib/python3.10/site-packages/keras_tuner/src/engine/tuner.py\", line 164, in _try_build\n    model = self._build_hypermodel(hp)\n  File \"/home/oleg/miniconda3/envs/TF/lib/python3.10/site-packages/keras_tuner/src/engine/tuner.py\", line 155, in _build_hypermodel\n    model = self.hypermodel.build(hp)\n  File \"/home/oleg/miniconda3/envs/TF/lib/python3.10/site-packages/keras_tuner/src/engine/hypermodel.py\", line 120, in _build_wrapper\n    return self._build(hp, *args, **kwargs)\n  File \"/home/oleg/miniconda3/envs/TF/lib/python3.10/site-packages/autokeras/graph.py\", line 229, in build\n    outputs = block.build(hp, inputs=temp_inputs)\n  File \"/home/oleg/miniconda3/envs/TF/lib/python3.10/site-packages/autokeras/engine/block.py\", line 38, in _build_wrapper\n    return super()._build_wrapper(hp, *args, **kwargs)\n  File \"/home/oleg/miniconda3/envs/TF/lib/python3.10/site-packages/keras_tuner/src/engine/hypermodel.py\", line 120, in _build_wrapper\n    return self._build(hp, *args, **kwargs)\n  File \"/home/oleg/miniconda3/envs/TF/lib/python3.10/site-packages/autokeras/blocks/basic.py\", line 462, in build\n    model = self.models[version](weights=\"imagenet\", include_top=False)\n  File \"/home/oleg/miniconda3/envs/TF/lib/python3.10/site-packages/keras/src/applications/efficientnet.py\", line 571, in EfficientNetB0\n    return EfficientNet(\n  File \"/home/oleg/miniconda3/envs/TF/lib/python3.10/site-packages/keras/src/applications/efficientnet.py\", line 434, in EfficientNet\n    model.load_weights(weights_path)\n  File \"/home/oleg/miniconda3/envs/TF/lib/python3.10/site-packages/keras/src/utils/traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"/home/oleg/miniconda3/envs/TF/lib/python3.10/site-packages/keras/src/legacy/saving/legacy_h5_format.py\", line 452, in _set_weights\n    raise ValueError(\nValueError: Shape mismatch in layer #1 (named stem_conv)for weight stem_conv/kernel. Weight expects shape (3, 3, 1, 32). Received saved weight with shape (3, 3, 3, 32)\n"}